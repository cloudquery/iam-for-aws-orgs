AWSTemplateFormatVersion: 2010-09-09
Description: Create the cloudquery role in member accounts.
Parameters:
  AccountList:
    Type: String
    Default: ""
    Description: List of Accounts to deploy the stackset to.
  OrganizationUnitList:
    Type: String
    Default: ""
    Description: List of OUs to deploy the stackset to.
  MemberRoleName:
    Type: String
    Default: cloudquery-ro
    Description: The name of the role that CloudQuery will assume in each member account.

Conditions:
  OUs: !Not [ !Equals [ !Ref OrganizationUnitList, ''] ]
  Accounts: !Not [ !Equals [ !Ref AccountList, ''] ]

Resources:
  CloudqueryReadOnly:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: cloudquery-mgmt-ro
      Description: Admin Role that CloudQuery will use to fetch resources from member accounts
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Resource: '*'
                Action:
                  - 'organizations:List*'
                  - 'sts:AssumeRole'
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub '${AWS::AccountId}' 
            Action:
              - 'sts:AssumeRole'
              - 'sts:TagSession'

  CloudQueryMemberRoles:
    Type: 'AWS::CloudFormation::StackSet'
    Properties:
      StackSetName: CloudQueryOrgRoles
      Description: cloudquery org setup
      Capabilities:
        - CAPABILITY_NAMED_IAM
      AutoDeployment:
        Enabled: true
        RetainStacksOnAccountRemoval: false
      PermissionModel: SERVICE_MANAGED
      StackInstancesGroup:
        - DeploymentTargets: 
            Accounts: !If [Accounts, !Split [ ",", !Ref AccountList ], !Ref AWS::NoValue]
            OrganizationalUnitIds: !If [OUs, !Split [ ",", !Ref OrganizationUnitList ], !Ref  AWS::NoValue]
          Regions: 
            - !Ref AWS::Region
      ManagedExecution:
        Active: true
      Parameters: 
        - ParameterKey: AdminRoleArn
          ParameterValue: !GetAtt CloudqueryReadOnly.Arn
        - ParameterKey: MemberRoleName
          ParameterValue: !Ref MemberRoleName
      TemplateBody: |
        {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "Create the cloudquery role in member accounts.",
          "Parameters": {
              "AdminRoleArn": {
                  "Type": "String",
                  "Description": "The role that is allowed to assume the role."
              },
              "MemberRoleName": {
                  "Type": "String",
                  "Description": "The name of the role that CloudQuery will assume in each member account."
              },
          },
          "Resources": {
              "Cloudquery": {
                  "Type": "AWS::IAM::ManagedPolicy",
                  "Properties": {
                      "ManagedPolicyName": "cloudquery",
                      "Description": "A Limited policy to allow cloudquery to do its job",
                      "PolicyDocument": {
                          "Version": "2012-10-17",
                          "Statement": [
                              {
                                  "Effect": "Deny",
                                  "Resource": "*",
                                  "Action": [
                                      "cloudformation:GetTemplate",
                                      "dynamodb:GetItem",
                                      "dynamodb:BatchGetItem",
                                      "dynamodb:Query",
                                      "dynamodb:Scan",
                                      "ec2:GetConsoleOutput",
                                      "ec2:GetConsoleScreenshot",
                                      "ecr:BatchGetImage",
                                      "ecr:GetAuthorizationToken",
                                      "ecr:GetDownloadUrlForLayer",
                                      "kinesis:Get*",
                                      "lambda:GetFunction",
                                      "logs:GetLogEvents",
                                      "s3:GetObject",
                                      "sdb:Select*",
                                      "sqs:ReceiveMessage",
                                      "secretsmanager:GetSecretValue",
                                      "ssm:GetCommandInvocation",
                                      "ssm:GetParameter*"
                                  ]
                              }
                          ]
                      }
                  }
              },
              "CloudqueryReadOnly": {
                  "Type": "AWS::IAM::Role",
                  "Properties": {
                      "RoleName": { "Ref" : "MemberRoleName" },
                      "Description": "Read Only Access for cloudquery to fetch resources from member accounts",
                      "ManagedPolicyArns": [
                          {
                              "Ref": "Cloudquery"
                          },
                          "arn:aws:iam::aws:policy/ReadOnlyAccess"
                      ],
                      "MaxSessionDuration": 28800,
                      "AssumeRolePolicyDocument": {
                          "Version": "2012-10-17",
                          "Statement": [
                              {
                                  "Effect": "Allow",
                                  "Principal": {
                                      "AWS": {
                                          "Fn::Sub": "${AdminRoleArn}"
                                      }
                                  },
                                  "Action": [
                                      "sts:AssumeRole",
                                      "sts:TagSession"
                                  ]
                              }
                          ]
                      }
                  }
              }
          }
        }
Outputs:
  AdminRoleArn:
    Value: !GetAtt CloudqueryReadOnly.Arn
  MemberRoleName:
    Value: !Ref MemberRoleName
